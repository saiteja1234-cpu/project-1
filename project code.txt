#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
char ciphered[100];
//html form
const char MAIN_page[] PROGMEM = R"=====(
<!DOCTYPE html>
<html>
<head>
<title>IoT Data Encoder</title>
<style type="text/css">
form {
 width: 450px;
 top: 50px;
 left: 550px;
 background: white;
 position: absolute;
 color: black;
 border-color: black;
 border-width: 2px;
 border-style: inset;
 text-align: center;
 font-size: 140%;
}
p {
 padding-top: 650px;
30
}
h2 {
 font-size: 120%
}
h3 {
 font-size: 100%;
}
</style>
<script>
function encryptMessage() {
 var message = document.getElementById("message").value;
 var encryption = document.getElementById("encryption").value;
 var ciphered = ' ';
 if (encryption === "Caesar Cipher") {
 for (var i = 0; i < message.length; i++) {
 var charCode = message.charCodeAt(i);
 if (charCode === 32) {
 ciphered += ' ';
 }
 else {
 var c = ((charCode - 32) + 15) % 96 + 32;
 ciphered += String.fromCharCode(c);
 }
 }
 }
 else if (encryption === "XOR") {
 const KEY = 0x1F;
 for (var i = 0; i < message.length; i++) {

 var charCode = message.charCodeAt(i);
 var encryptedChar = charCode ^ KEY; // XOR encryption
 ciphered += String.fromCharCode(encryptedChar);
 }
 }
 document.getElementById("message").value = ciphered;
 return true; // Continue form submission
}
</script>
</head>
<body>
<form action="/action_page" method="POST" onsubmit="return
encryptMessage();">
 <h3>Development of Data Encryption for IoT Networks</h3>
 <h2>ESP8266 Data Encoder</h2>
 Type the message:<br></br>
 <input type="text" name="message" id="message">
 <br></br>
 Encryption Type:<br></br>
 <select name="encryption" id="encryption">
 <option value="Caesar Cipher">Type I (Caesar Cipher)</option>
 <option value="XOR">Type II (XOR)</option>
 </select>
 <br></br>
 <input type="hidden" name="ciphered" id="ciphered">
 <input type="submit" value="Submit">
 <br></br>
</form>
<p>Project by:<br>

 Spatika Prasad 20911A0446 | Sai Teja 20911A0448 | Shaila Bhanu
20911A0430<br>
 Vidya Jyothi Institute of Technology, Hyderabad.</p>
</body>
</html>.
)=====";
//SSID and Password of your WiFi router
const char* ssid = "SSID";
const char* password = "";
ESP8266WebServer server(80); //Server on port 80
//============================================================
// This routine is executed when you open its IP in browser
//============================================================
void handleRoot() {
String s = MAIN_page; //Read HTML contents
server.send(200, "text/html", s); //Send web page
}
//============================================================
// This routine is executed when you press submit
//============================================================
void handleForm() {
String message = server.arg("message");
String encryption = server.arg("encryption");
Serial.print("Message: ");
Serial.println(message);

Serial.print("Encryption Selected: ");
Serial.println(encryption);
//============================================================
// Encryption
//============================================================
String s = "<h3>Your Message is sent!</h3> <a href='/'> Go Back </a>";
server.send(200, "text/html", s); //Send web page
/*else if(encryption == "XOR"){
 const byte KEY = 0x1F;
 int j=0;
 char plaintext[100];
 while(message[j]!='\0'){
 plaintext[j]=message[j];
 j++;
 }
 String ciphertext = "";
 for (int i = 0; i < 100; i++) {
 char c = plaintext[i];
 char encryptedChar = c ^ KEY; // XOR encryption
 ciphertext += encryptedChar;
}
 for (int i = 0; i < ciphertext.length(); i++) {
 char encryptedChar = ciphertext.charAt(i);

 Serial.write(encryptedChar); // Print each printable character

 }
 String s = "<h3>Your Message is sent!</h3> <a href='/'> Go Back </a>";
server.send(200, "text/html", s); //Send web page
 }*/
}
//============================================================
// SETUP
//============================================================
void setup(void){
 Serial.begin(9600);
 WiFi.begin(ssid, password); //Connect to your WiFi router
 Serial.println("");
 // Wait for connection
 while (WiFi.status() != WL_CONNECTED) {
 delay(500);
 Serial.print(".");
 }
 //If connection successful show IP address in serial monitor
 Serial.println("");
 Serial.print("Connected to ");
 Serial.println("WiFi");
 Serial.print("IP address: ");
 Serial.println(WiFi.localIP()); //IP address assigned to your ESP
server.on("/", handleRoot); //Which routine to handle at root location
 server.on("/action_page", handleForm); //form action is handled here

 server.begin(); //Start server
 Serial.println("HTTP server started");
}
//============================================================
// LOOP
//============================================================
void loop(void){
 server.handleClient(); //Handle client requests
}